-- ui variables------------
local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()
local InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua"))()

--- variables autofarm---

local Players = game:GetService("Players")
local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local humanoidRootPart = character:WaitForChild("HumanoidRootPart")

-- anti-afk
player.Idled:Connect(function()
    game:GetService("VirtualUser"):CaptureController()
    game:GetService("VirtualUser"):ClickButton2(Vector2.new())
end)

-- comprobaciÃ³n segura de leaderstats
local leaderstats = player:FindFirstChild("leaderstats")

local totalKills = 0
local monthlyKills = 0

if leaderstats then
    local totalKillsObj = leaderstats:FindFirstChild("Total Kills")
    local monthlyKillsObj = leaderstats:FindFirstChild("Kills")

    if totalKillsObj then
        totalKills = totalKillsObj.Value
    end

    if monthlyKillsObj then
        monthlyKills = monthlyKillsObj.Value
    end
end

-- crear parte para farming
local part = Instance.new("Part")
part.Anchored = true
part.Transparency = 1
part.Name = "Farming Ground"
part.Size = Vector3.new(2048, 20, 2048)
part.CFrame = CFrame.new(150, 10000, 30)
part.Parent = workspace

---- function----
local function instaKill()
    local character = player.Character
    if not character then return end
    local humanoid = character:FindFirstChildOfClass("Humanoid")
    if humanoid and humanoid.Health > 0 then
        humanoid.Health = 0
    end
end

--- script main---

local Window = Fluent:CreateWindow({
    Title = "The strongest Auto farm  V1.6",
    SubTitle = "by theyfw_lxchu and collab with Dave_Down",
    TabWidth = 160,
    Size = UDim2.fromOffset(580, 460),
    Acrylic = true,
    Theme = "Dark",
    MinimizeKey = Enum.KeyCode.LeftControl
})

local Tabs = {
    Main = Window:AddTab({ Title = "Main", Icon = "" }),
    Settings = Window:AddTab({ Title = "Settings", Icon = "settings" })
}

local Options = Fluent.Options

do
    Fluent:Notify({
        Title = "ðŸ‘…ðŸ‘…ðŸ‘…ðŸ‘…",
        Content = "Loading TSB Autofarm...",
        SubContent = "If only this shows contact me on discord, Dave_Down",
        Duration = 5
    })

    Tabs.Main:AddParagraph({
        Title = "TSB Autofarm",
        Content = "Welcome..  " .. character.Name
    })

    Tabs.Main:AddParagraph({
        Title = "Change log 1.6v",
        Content = "fixed auto emote, added insta kill, fixed some other potential bugs",
    })

    Tabs.Main:AddParagraph({
        Title = "TSB Autofarm",
        Content = "Total Kills: " .. totalKills
    })

    Tabs.Main:AddParagraph({
        Title = "TSB Autofarm",
        Content = "Monthly Kills: " .. monthlyKills
    })

    -- toggle autofarm
    local Toggle = Tabs.Main:AddToggle("MyToggle", {
        Title = "Auto Farm Toggle",
        Default = false
    })

    local teleportConnection = nil

    Toggle:OnChanged(function(Value)
        print("Toggle changed:", Value)

        while task.wait(0.1) and Options.MyToggle.Value do
            if player.Backpack:FindFirstChild("Shove") then
                humanoidRootPart.CFrame = part.CFrame * CFrame.new(0, 11, 0)

                for _, tool in pairs(player.Backpack:GetChildren()) do
                    if tool:IsA("Tool") then
                        humanoid:EquipTool(tool)
                        task.wait(0.001)
                        tool:Activate()
                        humanoid:UnequipTools()
                        task.wait(0.001)
                    end
                end
            else
                humanoidRootPart.CFrame = part.CFrame * CFrame.new(0, 11, -2)
                player.CharacterAdded:Connect(function(char)
                    humanoidRootPart = char:WaitForChild("HumanoidRootPart")
                    humanoidRootPart.CFrame = part.CFrame * CFrame.new(0, 11, -2)
                end)
            end
        end

        if not Options.MyToggle.Value then
            if teleportConnection then
                teleportConnection:Disconnect()
                teleportConnection = nil
            end
        end
    end)

    Options.MyToggle:SetValue(false)



    local Toggle = Tabs.Main:AddToggle("Auto claim emote ", {Title = "Auto claim emote ðŸ”¥ðŸ”¥ðŸ”¥", Default = false })

    Toggle:OnChanged(function(value)
        if value then
                local character = game:GetService("Players").LocalPlayer.Character or game:GetService("Players").LocalPlayer.CharacterAdded:Wait()
                local args = {
                    [1] = {
                        ["Goal"] = "Emote Spin"
                    }
                }

                workspace:WaitForChild("Live", 9e9):WaitForChild(character.Name, 9e9):WaitForChild("Communicate", 9e9):FireServer(unpack(args))
        end
    end)

    Options.MyToggle:SetValue(false)



    -- toggle instakill
    local InstaToggle = Tabs.Main:AddToggle("InstaKillToggle", {Title = "Insta Kill (use in alt)", Default = false})

    local instaKillEnabled = false

    InstaToggle:OnChanged(function(state)
        print("InstaKill changed:", state)
        instaKillEnabled = state

        local function onCharacterAdded(character)
            local humanoid = character:WaitForChild("Humanoid")

            humanoid.HealthChanged:Connect(function(newHealth)
                if instaKillEnabled and newHealth < humanoid.MaxHealth then
                    instaKill()
                end
            end)
        end

        if player.Character then
            onCharacterAdded(player.Character)
        end

        player.CharacterAdded:Connect(onCharacterAdded)
    end)

    Options.InstaKillToggle:SetValue(false)
end

-- addons
SaveManager:SetLibrary(Fluent)
InterfaceManager:SetLibrary(Fluent)

SaveManager:IgnoreThemeSettings()
SaveManager:SetIgnoreIndexes({})
InterfaceManager:SetFolder("FluentScriptHub")
SaveManager:SetFolder("FluentScriptHub/specific-game")

InterfaceManager:BuildInterfaceSection(Tabs.Settings)
SaveManager:BuildConfigSection(Tabs.Settings)

Window:SelectTab(1)

Fluent:Notify({
    Title = "Fluent",
    Content = "The script has been loaded.",
    Duration = 8
})

SaveManager:LoadAutoloadConfig()
